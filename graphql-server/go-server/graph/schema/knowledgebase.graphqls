type filegroup{
    source: TypedObjectReference
    path: [String!]
}

type filedetail{
    """文件路径"""
    path: String!

    """
    文件处理的阶段
    规则: enum { Pending , Processing , Succeeded, Failed, Skipped}
    """
    phase: String!
}

type filegroupdetail{
    source: TypedObjectReference
    filedetails:[filedetail]
}

type KnowledgeBase {
    id: String
    name: String!
    namespace: String!
    labels: Map
    annotations: Map
    creator: String
    displayName: String
    description: String
    embedder: TypedObjectReference
    vectorStore: TypedObjectReference
    fileGroupDetails: [filegroupdetail]
    """知识库连接状态"""
    status: String
    creationTimestamp: Time
    updateTimestamp: Time
}

"""源文件输入"""
input filegroupinput {
    """数据源字段"""
    source: TypedObjectReferenceInput!
    """路径"""
    path: [String!]
}

input CreateKnowledgeBaseInput{
    """知识库资源名称（不可同名）"""
    name: String!
    """知识库创建命名空间"""
    namespace: String!
    """知识库资源标签"""
    labels: Map
    """知识库资源注释"""
    annotations: Map
    """知识库资源展示名称作为显示，并提供编辑"""
    displayName: String
    """知识库资源描述"""
    description: String
    """模型服务"""
    embedder: String!
    """"向量数据库(使用默认值)"""
    vectorStore: TypedObjectReferenceInput
    """知识库文件"""
    fileGroups: [filegroupinput!]
}

input UpdateKnowledgeBaseInput {
    """知识库资源名称（不可同名）"""
    name: String!
    """知识库创建命名空间"""
    namespace: String!
    """知识库资源标签"""
    labels: Map
    """知识库资源注释"""
    annotations: Map
    """知识库资源展示名称作为显示，并提供编辑"""
    displayName: String
    """知识库资源描述"""
    description: String
}

input DeleteKnowledgeBaseInput {
    name: String
    namespace: String!
    """标签选择器"""
    labelSelector: String
    """字段选择器"""
    fieldSelector: String
}

input ListKnowledgeBaseInput {
    name: String
    namespace: String!
    displayName: String
    """标签选择器"""
    labelSelector: String
    """字段选择器"""
    fieldSelector: String
    page: Int
    pageSize: Int
    keyword: String
}

type KnowledgeBaseQuery {
    getKnowledgeBase(name: String!, namespace: String!): KnowledgeBase!
    listKnowledgeBases(input: ListKnowledgeBaseInput!): PaginatedResult!
}

type KnowledgeBaseMutation {
    createKnowledgeBase(input: CreateKnowledgeBaseInput!): KnowledgeBase!
    updateKnowledgeBase(input: UpdateKnowledgeBaseInput): KnowledgeBase!
    deleteKnowledgeBase(input: DeleteKnowledgeBaseInput): Void
}

# mutation
extend type Mutation {
    KnowledgeBase: KnowledgeBaseMutation
}
# query
extend type Query{
    KnowledgeBase: KnowledgeBaseQuery
}
