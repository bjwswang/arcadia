type Model {
    id: String
    name: String!
    namespace: String!
    labels: Map
    annotations: Map
    creator: String
    displayName: String
    description: String
    modeltypes: String!
    status: String
    creationTimestamp: Time
    updateTimestamp: Time
}

input CreateModelInput{
    """模型资源名称（不可同名）"""
    name: String!
    """模型创建命名空间"""
    namespace: String!
    """模型资源展示名称作为显示，并提供编辑"""
    displayName: String
    """模型资源描述"""
    description: String
    """模型类型"""
    modeltypes: String!
}

input UpdateModelInput {
    """模型资源名称（不可同名）"""
    name: String!
    """模型创建命名空间"""
    namespace: String!
    """模型资标签"""
    labels: Map
    """模型资源注释"""
    annotations: Map
    """模型资源展示名称作为显示，并提供编辑"""
    displayName: String
    """模型资源描述"""
    description: String
}

input DeleteModelInput {
    name: String 
    namespace: String!
    """标签选择器"""
    labelSelector: String
    """字段选择器"""
    fieldSelector: String
}

input ListModelInput {
    name: String
    namespace: String!
    displayName: String
    """标签选择器"""
    labelSelector: String
    """字段选择器"""
    fieldSelector: String
    page: Int
    pageSize: Int
    keyword: String
}

type ModelMutation {
    createModel(input: CreateModelInput!): Model!
    updateModel(input: UpdateModelInput): Model!
    deleteModel(input: DeleteModelInput): Void
}

type ModelQuery {
    getModel(name: String!, namespace: String!): Model!
    listModels(input: ListModelInput!): PaginatedResult!
}
extend type Mutation {
    Model: ModelMutation
}

extend type Query {
    Model: ModelQuery
}