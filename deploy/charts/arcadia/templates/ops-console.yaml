{{- if .Values.opsconsole.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-opsconsole
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-opsconsole
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-opsconsole
    spec:
      {{- if .Values.global.hostConfig.enabled }}
      hostAliases: {{ toYaml .Values.global.hostConfig.hostAliases | nindent 6 }}
      {{- end }}
      containers:
        - image: {{ .Values.opsconsole.image }}
          imagePullPolicy: IfNotPresent
          name: kubeagi-opsconsole
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-opsconsole
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Release.Name }}-opsconsole
  ports:
    - name: api
      port: 80
      protocol: TCP
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-opsconsole-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
    description: kubeagi-opsconsole-ingress
    displayName: kubeagi-opsconsole-ingress
    httpSend: /
    ingress-lb: portal-ingress
    kubernetes.io/ingress.class: portal-ingress
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_cache static-cache;
      proxy_cache_valid 404 10m;
      proxy_cache_use_stale error timeout updating http_404 http_500 http_502 http_503 http_504;
      proxy_cache_bypass $http_x_purge;
      add_header X-Cache-Status $upstream_cache_status; # check X-Cache-Status to see if it's HIT
    nginx.ingress.kubernetes.io/enable-access-log: "false"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "false"
    nginx.ingress.kubernetes.io/load-balance: round_robin
    nginx.ingress.kubernetes.io/proxy-body-size: ""
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/server-alias: ""
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/upstream-vhost: $host
spec:
  rules:
    - host: {{ .Values.opsconsole.ingress.host }}
      http:
        paths:
          - pathType: ImplementationSpecific
            path: "/{{ .Values.opsconsole.ingress.path }}"
            backend:
              service:
                name: {{ .Release.Name }}-opsconsole
                port:
                  number: 80
{{- end }}

