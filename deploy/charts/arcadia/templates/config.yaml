apiVersion: v1
data:
  config: |
    systemDatasource:
      apiGroup: arcadia.kubeagi.k8s.com.cn/v1alpha1
      kind: Datasource
      name: '{{ .Release.Name }}-minio'
      namespace: '{{ .Release.Namespace }}'
{{- if .Values.postgresql.enabled }}
    relationalDatasource:
      apiGroup: arcadia.kubeagi.k8s.com.cn/v1alpha1
      kind: Datasource
      name:  {{ .Release.Name }}-postgresql
      namespace: {{ .Release.Namespace }}
{{- end }}
{{- if gt (len .Values.ray.clusters) 0 }}
    rayClusters:
      {{- range .Values.ray.clusters }}
      - name: {{ .name }}
        headAddress: {{ .headAddress }}
        pythonVersion: {{ .pythonVersion }}
        dashboardHost: {{ .dashboardHost }}
      {{- end }}
{{- end }}
    gateway:
      apiServer: 'http://{{ .Release.Name }}-fastchat.{{ .Release.Namespace }}.svc.cluster.local:8000/v1'
      controller: 'http://{{ .Release.Name }}-fastchat.{{ .Release.Namespace }}.svc.cluster.local:21001'
{{- if .Values.fastchat.ingress.enabled }}
      externalApiServer: 'http://{{ .Values.fastchat.ingress.host }}/v1'
{{- end }}
    vectorStore:
      apiGroup: arcadia.kubeagi.k8s.com.cn/v1alpha1
      kind: VectorStore
{{- if and (.Values.chromadb.enabled) (eq .Values.global.defaultVectorStoreType "chroma") }}
      name: '{{ .Release.Name }}-vectorstore'
{{- end }}
{{- if and (.Values.postgresql.enabled) (eq .Values.global.defaultVectorStoreType "pgvector") }}
      name: '{{ .Release.Name }}-pgvector-vectorstore'
{{- end }}
      namespace: '{{ .Release.Namespace }}'
{{- if .Values.config.embedder.enabled }}
    embedder:
      apiGroup: arcadia.kubeagi.k8s.com.cn/v1alpha1
      kind: Embedder
      name: {{ .Release.Name }}-embedder
      namespace: {{ .Release.Namespace }}
{{- end }}
{{- if .Values.config.rerank.enabled }}
    rerank:
      apiGroup: arcadia.kubeagi.k8s.com.cn/v1alpha1
      kind: Model
      name: {{ .Values.config.rerank.model }}
      namespace: {{ .Release.Namespace }}
{{- end }}
    #streamlit:
    #  image: 172.22.96.34/cluster_system/streamlit:v1.29.0
    #  ingressClassName: portal-ingress
    #  host: portal.172.22.96.136.nip.io
    #  contextPath: /arcadia
  dataprocess: |
    llm:
      qa_retry_count: {{ .Values.dataprocess.config.llm.qa_retry_count }}
    worker: {{ .Values.dataprocess.config.worker }}
    chunkSize: {{ .Values.dataprocess.config.chunkSize }}
{{- if .Values.postgresql.enabled }}
    postgresql:
      host: {{ .Release.Name }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local
      port: {{ .Values.postgresql.containerPorts.postgresql }}
      user: {{ .Values.postgresql.global.postgresql.auth.username }}
      password: {{ .Values.postgresql.global.postgresql.auth.password }}
      database: {{ .Values.postgresql.global.postgresql.auth.database }}
  # configurations for gpts
  gptsConfig: |
    categories:
      - id: 1
        name: "通用对话"
        nameEn: "General Conversation"
      - id: 2
        name: "工作"
        nameEn: "Work"
      - id: 3
        name: "学习"
        nameEn: "Learning"
      - id: 4
        name: "效率"
        nameEn: "Efficiency"
      - id: 5
        name: "人物扮演"
        nameEn: "Character Play"
      - id: 6
        name: "游戏"
        nameEn: "Game"
      - id: 7
        name: "生活"
        nameEn: "Life"
      - id: 8
        name: "情感"
        nameEn: "Emotion"
      - id: 9
        name: "动漫"
        nameEn: "Anime"
{{- end }}
kind: ConfigMap
metadata:
  labels:
    control-plane: {{ .Release.Name }}-arcadia
  name: {{ .Release.Name }}-config
  namespace: {{ .Release.Namespace }}
