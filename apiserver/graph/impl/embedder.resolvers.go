package impl

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"

	"github.com/kubeagi/arcadia/apiserver/graph/generated"
	"github.com/kubeagi/arcadia/apiserver/pkg/embedder"
)

// CreateEmbedder is the resolver for the createEmbedder field.
func (r *embedderMutationResolver) CreateEmbedder(ctx context.Context, obj *generated.EmbedderMutation, input generated.CreateEmbedderInput) (*generated.Embedder, error) {
	c, err := getClientFromCtx(ctx)
	if err != nil {
		return nil, err
	}

	return embedder.CreateEmbedder(ctx, c, input)
}

// UpdateEmbedder is the resolver for the updateEmbedder field.
func (r *embedderMutationResolver) UpdateEmbedder(ctx context.Context, obj *generated.EmbedderMutation, input *generated.UpdateEmbedderInput) (*generated.Embedder, error) {
	c, err := getClientFromCtx(ctx)
	if err != nil {
		return nil, err
	}
	name, displayname := "", ""
	if input.DisplayName != nil {
		displayname = *input.DisplayName
	}
	if input.Name != "" {
		name = input.Name

	}
	return embedder.UpdateEmbedder(ctx, c, name, input.Namespace, displayname)
}

// DeleteEmbedders is the resolver for the deleteEmbedders field.
func (r *embedderMutationResolver) DeleteEmbedders(ctx context.Context, obj *generated.EmbedderMutation, input *generated.DeleteCommonInput) (*string, error) {
	c, err := getClientFromCtx(ctx)
	if err != nil {
		return nil, err
	}
	return embedder.DeleteEmbedders(ctx, c, input)
}

// GetEmbedder is the resolver for the getEmbedder field.
func (r *embedderQueryResolver) GetEmbedder(ctx context.Context, obj *generated.EmbedderQuery, name string, namespace string) (*generated.Embedder, error) {
	c, err := getClientFromCtx(ctx)
	if err != nil {
		return nil, err
	}
	return embedder.ReadEmbedder(ctx, c, name, namespace)
}

// ListEmbedders is the resolver for the listEmbedders field.
func (r *embedderQueryResolver) ListEmbedders(ctx context.Context, obj *generated.EmbedderQuery, input generated.ListCommonInput) (*generated.PaginatedResult, error) {
	c, err := getClientFromCtx(ctx)
	if err != nil {
		return nil, err
	}
	return embedder.ListEmbedders(ctx, c, input)
}

// Embedder is the resolver for the Embedder field.
func (r *mutationResolver) Embedder(ctx context.Context) (*generated.EmbedderMutation, error) {
	return &generated.EmbedderMutation{}, nil
}

// Embedder is the resolver for the Embedder field.
func (r *queryResolver) Embedder(ctx context.Context) (*generated.EmbedderQuery, error) {
	return &generated.EmbedderQuery{}, nil
}

// EmbedderMutation returns generated.EmbedderMutationResolver implementation.
func (r *Resolver) EmbedderMutation() generated.EmbedderMutationResolver {
	return &embedderMutationResolver{r}
}

// EmbedderQuery returns generated.EmbedderQueryResolver implementation.
func (r *Resolver) EmbedderQuery() generated.EmbedderQueryResolver { return &embedderQueryResolver{r} }

type embedderMutationResolver struct{ *Resolver }
type embedderQueryResolver struct{ *Resolver }
