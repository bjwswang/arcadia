package impl

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"

	"github.com/kubeagi/arcadia/apiserver/graph/generated"
	"github.com/kubeagi/arcadia/apiserver/pkg/llm"
)

// GetLlm is the resolver for the getLLM field.
func (r *lLMQueryResolver) GetLlm(ctx context.Context, obj *generated.LLMQuery, name string, namespace string) (*generated.Llm, error) {
	c, err := getClientFromCtx(ctx)
	if err != nil {
		return nil, err
	}

	return llm.ReadLLM(ctx, c, name, namespace)
}

// ListLLMs is the resolver for the listLLMs field.
func (r *lLMQueryResolver) ListLLMs(ctx context.Context, obj *generated.LLMQuery, input generated.ListCommonInput) (*generated.PaginatedResult, error) {
	c, err := getClientFromCtx(ctx)
	if err != nil {
		return nil, err
	}

	return llm.ListLLMs(ctx, c, input)
}

// Llm is the resolver for the LLM field.
func (r *queryResolver) Llm(ctx context.Context) (*generated.LLMQuery, error) {
	return &generated.LLMQuery{}, nil
}

// LLMQuery returns generated.LLMQueryResolver implementation.
func (r *Resolver) LLMQuery() generated.LLMQueryResolver { return &lLMQueryResolver{r} }

type lLMQueryResolver struct{ *Resolver }
