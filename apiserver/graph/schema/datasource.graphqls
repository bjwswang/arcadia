"""终端的访问信息"""
type Endpoint {
    """url地址"""
    url: String
    """终端访问的密钥信息，保存在k8s secret中"""
    authSecret: TypedObjectReference
    """是否通过非安全方式访问，默认为false，即安全模式访问"""
    insecure: Boolean
}

"""对象存储的使用信息"""
type Oss {
    """所用的bucket名称"""
    bucket: String
    """所用的object路径(可为前缀)"""
    object: String
}

"""
数据源: 定义了对某一个具备数据存储能力服务的访问信息，供后续向该数据源获取数据使用
"""
type Datasource {
    """
    模型id,为CR资源中的metadata.uid
    """
    id: String

    """
    名称
    规则: 遵循k8s命名
    规则: 非空
    """
    name: String!
    """
    命名空间
    规则: 非空
    """
    namespace: String!

    labels: Map
    annotations: Map

    """
    创建者，为当前用户的用户名
    规则: webhook启用后自动添加，默认为空
    """
    creator: String
    """展示名"""
    displayName: String
    """描述信息"""
    description: String

    """终端访问信息"""
    endpoint: Endpoint

    """
    对象存储访问信息
    规则: 非空代表当前数据源为对象存储数据源
    """
    oss: Oss

    """数据源连接状态"""
    status: String

    message: String

    """创建时间"""
    creationTimestamp: Time
    """更新时间, 这里更新指文件同步，或者数据处理完成后，做的更新操作的时间"""
    updateTimestamp: Time
}

"""文件输入"""
input OssInput {
    bucket: String!
    object: String
}

"""新增数据源时输入条件"""
input CreateDatasourceInput {
    """
    名字
    规则: k8s的名称规则
    规则: 非空
    """
    name: String!

    """
    数据源的命名空间
    规则: 非空
    """
    namespace: String!

    """数据源资源标签"""
    labels: Map
    """数据源资源注释"""
    annotations: Map

    """数据源资源展示名称作为显示，并提供编辑"""
    displayName: String
    """数据源资源描述"""
    description: String

    """数据源的访问信息输入"""
    endpointinput: EndpointInput!

    """数据源为对象存储类型时的输入"""
    ossinput: OssInput
}

"""更新数据源的输入"""
input UpdateDatasourceInput {
    """
    name, namespace用来确定资源
    规则: 不允许修改的。将原数据传递回来即可。
    """
    name: String!
    namespace: String!

    """
    更新的的标签信息，这里涉及到增加或者删除标签，
    规则: 不允许修改的。将原数据传递回来即可。    
    如果标签有任何改动，传递完整的label。
    例如之前的标齐是: abc:def 新增一个标签aa:bb, 那么传递 abc:def, aa:bb
    """ 
    labels: Map
    annotations: Map

    """如不更新，则为空"""
    displayName: String
    """如不更新，则为空"""
    description: String

    """数据源的访问信息输入"""
    endpointinput: EndpointInput

    """数据源为对象存储类型时的输入"""
    ossinput: OssInput
}


type DatasourceQuery {
    getDatasource(name: String!, namespace: String!): Datasource!
    checkDatasource(input: CreateDatasourceInput!): Datasource!
    listDatasources(input: ListCommonInput!): PaginatedResult!
}

type DatasourceMutation {
    createDatasource(input: CreateDatasourceInput!): Datasource!
    updateDatasource(input: UpdateDatasourceInput): Datasource!
    deleteDatasources(input: DeleteCommonInput): Void
}
# mutation
extend type Mutation {
    Datasource: DatasourceMutation
}
# query
extend type Query{
    Datasource: DatasourceQuery
}
