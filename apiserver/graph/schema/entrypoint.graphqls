type Query {
    hello(name: String!): String!
}
type Mutation{
    hello(name: String!): String!
}

"""对象存储终端输入"""
input EndpointInput {
    """地址(必填)"""
    url: String!
    """secret验证密码"""
    auth: AuthInput
    """默认true"""
    insecure: Boolean
}

input AuthInput {
    username: String!
    password: String!
}

input ListCommonInput {
    namespace: String!

    """
    关键词: 模糊匹配
    """
    keyword: String

    """标签选择器"""
    labelSelector: String
    """字段选择器"""
    fieldSelector: String
    """
    分页页码，
    规则: 从1开始，默认是1
    """
    page: Int

    """
    每页数量，
    规则: 默认10
    """
    pageSize: Int
}

input DeleteCommonInput {
    name: String
    namespace: String!
    """标签选择器"""
    labelSelector: String
    """字段选择器"""
    fieldSelector: String
}

scalar Time
scalar Map
scalar Void

type PaginatedResult {
    hasNextPage: Boolean!
    nodes: [PageNode!]
    page: Int
    pageSize: Int
    totalCount: Int!
}

input TypedObjectReferenceInput {
    apiGroup: String
    kind: String!
    name: String!
    namespace: String
}

type TypedObjectReference {
    apiGroup: String
    kind: String!
    name: String!
    namespace: String
}

union PageNode = Datasource | Model | Embedder | KnowledgeBase | Dataset | VersionedDataset | F | Worker | KnowledgeBaseApplication | LLM
