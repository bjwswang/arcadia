// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bff/model/files": {
            "delete": {
                "description": "Delete files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Delete files",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.DelteFileBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/bff/model/files/chunk_url": {
            "post": {
                "description": "Get multipart upload URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Get multipart upload URL",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.GenChunkURLBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.GenChunkURLResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/bff/model/files/chunks": {
            "get": {
                "description": "Get success chunks of a file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Get success chunks of a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MD5 value of the file",
                        "name": "md5",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the file",
                        "name": "fileName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path of the bucket",
                        "name": "bucketPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ETag of the file",
                        "name": "etag",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.SuccessChunksResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Complete multipart upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Complete multipart upload",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.CompleteBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create new multipart upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "create new multipart upload",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.NewMultipartBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/bff/model/files/chunks/abort": {
            "put": {
                "description": "Abort a file upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Abort a file upload",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.CompleteBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/bff/model/files/download": {
            "get": {
                "description": "Download files in chunks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Download files in chunks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The start of the file",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The end of the file",
                        "name": "end",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path of the bucket",
                        "name": "bucketPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the file",
                        "name": "fileName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/bff/model/files/downloadlink": {
            "get": {
                "description": "Get a download link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Get a download link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path of the bucket",
                        "name": "bucketPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the file",
                        "name": "fileName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/bff/model/files/stat": {
            "get": {
                "description": "Statistics file information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Statistics file information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the file",
                        "name": "fileName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path of the bucket",
                        "name": "bucketPath",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/bff/versioneddataset/files/csv": {
            "get": {
                "description": "Read a file line by line",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Read a file line by line",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Start page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The number of rows read each time",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path of the bucket",
                        "name": "bucketPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the file",
                        "name": "fileName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ReadCSVResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/bff/versioneddataset/files/webcrawler": {
            "post": {
                "description": "Create a web crawler file which contains crawer params",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Create web cralwer file",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.WebCrawlerFileBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/chat": {
            "post": {
                "description": "chat with application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "chat with application",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Should the chat request be treated as debugging?",
                        "name": "debug",
                        "in": "query"
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.ChatReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "blocking mode, will return all field; streaming mode, only conversation_id, message and created_at will be returned",
                        "schema": {
                            "$ref": "#/definitions/chat.ChatRespBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/chat/conversations": {
            "post": {
                "description": "list all conversations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "list all conversations",
                "parameters": [
                    {
                        "description": "query params, if not set will return all current user's conversations",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/chat.APPMetadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.Conversation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/chat/conversations/:conversationID": {
            "delete": {
                "description": "delete one conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "delete one conversation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "conversationID",
                        "name": "conversationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.SimpleResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/chat/conversations/file": {
            "post": {
                "description": "receive conversational files for one conversation",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "receive conversational files for one conversation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The app namespace for this conversation",
                        "name": "app_namespace",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The app name for this conversation",
                        "name": "app_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The conversation id for this file",
                        "name": "conversation_id",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "This is the file for the conversation",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.ChatRespBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/chat/messages": {
            "post": {
                "description": "get all messages history for one conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "get all messages history for one conversation",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.ConversationReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.Conversation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/chat/messages/:messageID/references": {
            "post": {
                "description": "get one message's references",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "get one message references",
                "parameters": [
                    {
                        "type": "string",
                        "description": "messageID",
                        "name": "messageID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.MessageReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/retriever.Reference"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/chat/prompt-starter": {
            "post": {
                "description": "get app's prompt starters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "get app's prompt starters",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "how many prompts you need should \u003e 0 and \u003c 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.APPMetadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/rags/detail": {
            "get": {
                "description": "Get detail data of a rag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RAG"
                ],
                "summary": "Get detail data of a rag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rag name",
                        "name": "ragName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "default is 10",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "rag metrcis",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "desc or asc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rag.ReportDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/rags/report": {
            "get": {
                "description": "Get a summary of rag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RAG"
                ],
                "summary": "Get a summary of rag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rag name",
                        "name": "ragName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rag.Report"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/rags/scatter": {
            "get": {
                "description": "Get scatter data of a rag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RAG"
                ],
                "summary": "Get scatter data of a rag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rag name",
                        "name": "ragName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rag.ReportDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "chat.APPMetadata": {
            "type": "object",
            "required": [
                "app_name",
                "app_namespace"
            ],
            "properties": {
                "app_name": {
                    "description": "AppName, the name of the application",
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "description": "AppNamespace, the namespace of the application",
                    "type": "string",
                    "example": "kubeagi-system"
                }
            }
        },
        "chat.ChatReqBody": {
            "type": "object",
            "required": [
                "app_name",
                "app_namespace",
                "query",
                "response_mode"
            ],
            "properties": {
                "app_name": {
                    "description": "AppName, the name of the application",
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "description": "AppNamespace, the namespace of the application",
                    "type": "string",
                    "example": "kubeagi-system"
                },
                "conversation_id": {
                    "description": "ConversationID, if it is empty, a new conversation will be created",
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                },
                "files": {
                    "description": "Files this conversation will use in the context",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "test.pdf",
                        "song.mp3"
                    ]
                },
                "query": {
                    "description": "Query user query string",
                    "type": "string",
                    "example": "旷工最小计算单位为多少天？"
                },
                "response_mode": {
                    "description": "ResponseMode:\n* Blocking - means the response is returned in a blocking manner\n* Streaming - means the response will use Server-Sent Events",
                    "allOf": [
                        {
                            "$ref": "#/definitions/chat.ResponseMode"
                        }
                    ],
                    "example": "blocking"
                }
            }
        },
        "chat.ChatRespBody": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "Action indicates what is this chat for",
                    "type": "string",
                    "example": "CHAT"
                },
                "conversation_id": {
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                },
                "created_at": {
                    "description": "CreatedAt is the time when the message is created",
                    "type": "string",
                    "example": "2023-12-21T10:21:06.389359092+08:00"
                },
                "latency": {
                    "description": "Latency(ms) is how much time the server cost to process a certain request.",
                    "type": "integer",
                    "example": 1000
                },
                "message": {
                    "description": "Message is what AI say",
                    "type": "string",
                    "example": "旷工最小计算单位为0.5天。"
                },
                "message_id": {
                    "type": "string",
                    "example": "4f3546dd-5404-4bf8-a3bc-4fa3f9a7ba24"
                },
                "references": {
                    "description": "References is the list of references",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/retriever.Reference"
                    }
                }
            }
        },
        "chat.ConversationReqBody": {
            "type": "object",
            "required": [
                "app_name",
                "app_namespace"
            ],
            "properties": {
                "app_name": {
                    "description": "AppName, the name of the application",
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "description": "AppNamespace, the namespace of the application",
                    "type": "string",
                    "example": "kubeagi-system"
                },
                "conversation_id": {
                    "description": "ConversationID, if it is empty, a new conversation will be created",
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                }
            }
        },
        "chat.ErrorResp": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "conversation is not found"
                }
            }
        },
        "chat.MessageReqBody": {
            "type": "object",
            "required": [
                "app_name",
                "app_namespace"
            ],
            "properties": {
                "app_name": {
                    "description": "AppName, the name of the application",
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "description": "AppNamespace, the namespace of the application",
                    "type": "string",
                    "example": "kubeagi-system"
                },
                "conversation_id": {
                    "description": "ConversationID, if it is empty, a new conversation will be created",
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                },
                "message_id": {
                    "description": "MessageID, single message id",
                    "type": "string",
                    "example": "4f3546dd-5404-4bf8-a3bc-4fa3f9a7ba24"
                }
            }
        },
        "chat.ResponseMode": {
            "type": "string",
            "enum": [
                "blocking",
                "streaming"
            ],
            "x-enum-varnames": [
                "Blocking",
                "Streaming"
            ]
        },
        "chat.SimpleResp": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "common.ReadCSVResult": {
            "type": "object",
            "properties": {
                "rows": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "rag.RadarData": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "rag.Report": {
            "type": "object",
            "properties": {
                "radarChart": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rag.RadarData"
                    }
                },
                "summary": {
                    "description": "TODO",
                    "type": "string"
                },
                "totalScore": {
                    "$ref": "#/definitions/rag.TotalScoreData"
                }
            }
        },
        "rag.ReportDetail": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rag.ReportLine"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "rag.ReportLine": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "costTime": {
                    "type": "number"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "groundTruths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "question": {
                    "type": "string"
                },
                "totalScore": {
                    "type": "number"
                }
            }
        },
        "rag.TotalScoreData": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                }
            }
        },
        "retriever.Reference": {
            "type": "object",
            "properties": {
                "answer": {
                    "description": "Answer row",
                    "type": "string",
                    "example": "旷工最小计算单位为 0.5 天。"
                },
                "content": {
                    "description": "related content in the source file or in webpage",
                    "type": "string",
                    "example": "旷工最小计算单位为0.5天，不足0.5天以0.5天计算，超过0.5天不满1天以1天计算，以此类推。"
                },
                "file_name": {
                    "description": "source file name, only file name, not full path",
                    "type": "string",
                    "example": "员工考勤管理制度-2023.pdf"
                },
                "page_number": {
                    "description": "page number in the source file",
                    "type": "integer",
                    "example": 1
                },
                "qa_file_path": {
                    "description": "the qa file fullpath",
                    "type": "string",
                    "example": "dataset/dataset-playground/v1/qa.csv"
                },
                "qa_line_number": {
                    "description": "line number in the qa file",
                    "type": "integer",
                    "example": 7
                },
                "question": {
                    "description": "Question row",
                    "type": "string",
                    "example": "q: 旷工最小计算单位为多少天？"
                },
                "score": {
                    "description": "vector search score",
                    "type": "number",
                    "example": 0.34
                },
                "title": {
                    "description": "Title of the webpage",
                    "type": "string",
                    "example": "开始使用 Microsoft 帐户 – Microsoft"
                },
                "url": {
                    "description": "URL of the webpage",
                    "type": "string",
                    "example": "https://www.microsoft.com/zh-cn/welcome"
                }
            }
        },
        "service.Chunk": {
            "type": "object",
            "properties": {
                "etag": {
                    "type": "string"
                },
                "partNubmer": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "service.CompleteBody": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "bucketPath": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "md5": {
                    "type": "string"
                },
                "uploadID": {
                    "type": "string"
                }
            }
        },
        "service.DelteFileBody": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "bucketPath": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "service.GenChunkURLBody": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "bucketPath": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "md5": {
                    "type": "string"
                },
                "partNumber": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "uploadID": {
                    "type": "string"
                }
            }
        },
        "service.GenChunkURLResult": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "service.NewMultipartBody": {
            "type": "object",
            "properties": {
                "bucket": {
                    "description": "The file is eventually stored in bucketPath/filtName in the bucket.",
                    "type": "string"
                },
                "bucketPath": {
                    "type": "string"
                },
                "chunkCount": {
                    "description": "How many pieces do we have to divide it into?",
                    "type": "integer"
                },
                "fileName": {
                    "type": "string"
                },
                "md5": {
                    "description": "file md5",
                    "type": "string"
                },
                "size": {
                    "description": "part size",
                    "type": "integer"
                }
            }
        },
        "service.SuccessChunksResult": {
            "type": "object",
            "properties": {
                "chunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Chunk"
                    }
                },
                "done": {
                    "type": "boolean"
                },
                "uploadID": {
                    "type": "string"
                }
            }
        },
        "service.WebCrawlerFileBody": {
            "type": "object",
            "required": [
                "datasource",
                "versioneddataset"
            ],
            "properties": {
                "datasource": {
                    "type": "string"
                },
                "params": {
                    "description": "Params to generate a web crawler file",
                    "type": "object",
                    "properties": {
                        "exclude_img_info": {
                            "type": "object",
                            "properties": {
                                "height": {
                                    "type": "integer"
                                },
                                "weight": {
                                    "type": "integer"
                                }
                            }
                        },
                        "exclude_sub_urls": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "include_sub_urls": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "interval_time": {
                            "description": "Params",
                            "type": "integer"
                        },
                        "max_count": {
                            "type": "integer"
                        },
                        "max_depth": {
                            "type": "integer"
                        },
                        "resource_types": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "url": {
                            "type": "string"
                        }
                    }
                },
                "versioneddataset": {
                    "type": "string"
                }
            }
        },
        "storage.Conversation": {
            "type": "object",
            "properties": {
                "app_name": {
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "type": "string",
                    "example": "arcadia"
                },
                "id": {
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.Message"
                    }
                },
                "started_at": {
                    "type": "string",
                    "example": "2023-12-21T10:21:06.389359092+08:00"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-12-22T10:21:06.389359092+08:00"
                }
            }
        },
        "storage.Document": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "4f3546dd-5404-4bf8-a3bc-4fa3f9a7ba24"
                },
                "name": {
                    "type": "string",
                    "example": "kaoqin.pdf"
                },
                "summary": {
                    "type": "string",
                    "example": "kaoqin.pdf"
                }
            }
        },
        "storage.Message": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "Action indicates what is this message for\nChat(by default),UPLOAD,etc...",
                    "type": "string",
                    "example": "UPLOAD"
                },
                "answer": {
                    "type": "string",
                    "example": "旷工最小计算单位为0.5天。"
                },
                "documents": {
                    "description": "Docs uploaded in this message",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.Document"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "4f3546dd-5404-4bf8-a3bc-4fa3f9a7ba24"
                },
                "latency": {
                    "type": "integer",
                    "example": 1000
                },
                "query": {
                    "type": "string",
                    "example": "旷工最小计算单位为多少天？"
                },
                "references": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/retriever.Reference"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API token for authorization",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "ApiServer Swagger API",
	Description:      "This is a apiserver for KubeAGI.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
